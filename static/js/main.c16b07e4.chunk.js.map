{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","services/local-storage.js","index.js"],"names":["module","exports","ContactList","filter","contacts","onDeleteContact","className","s","list","name","toLowerCase","includes","map","id","number","item","entry","type","onClick","Fields","ContactForm","onAddContact","useState","setName","setNumber","handleInputContact","e","target","value","form","onSubmit","preventDefault","field","onChange","pattern","title","required","button","Filter","onFilter","INITIAL","App","setContacts","setFilter","useEffect","key","JSON","parse","localStorage","getItem","error","storage","length","setItem","stringify","app","normName","split","word","capLetter","charAt","toUpperCase","rest","substring","join","normalize","some","alert","newContact","nanoid","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c16b07e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"entry\":\"ContactList_entry__12DSb\",\"number\":\"ContactList_number__14V4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"field\":\"ContactForm_field__2c9Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\",\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filter, contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.entry}>\n              <span>{name}</span>\n              <span className={s.number}>{number}</span>\n            </p>\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst Fields = {\n  NAME: 'name',\n  NUMBER: 'number',\n};\n\nconst ContactForm = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputContact = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case Fields.NAME:\n        setName(value);\n        return;\n      case Fields.NUMBER:\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    onAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleAddContact}>\n      <label className={s.field}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputContact}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.field}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputContact}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = { onAddContact: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ onFilter, filter }) => {\n  return (\n    <div className={s.filter}>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} value={filter} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport s from './App.module.css';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport * as storage from 'services/local-storage';\n\nconst INITIAL = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst App = () => {\n  const [contacts, setContacts] = useState(INITIAL);\n  const [filter, setFilter] = useState('');\n\n  const normalize = name => {\n    const words = name.split(' ');\n    return words\n      .map(word => {\n        const capLetter = word.charAt(0).toUpperCase();\n        const rest = word.substring(1);\n        return `${capLetter}${rest}`;\n      })\n      .join(' ');\n  };\n\n  const handleAddContact = (name, number) => {\n    const normName = normalize(name);\n    const isDuplicate = contacts.some(item => item.name === normName);\n\n    if (isDuplicate) {\n      alert(`${normName} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: normName,\n      number,\n      id: nanoid(),\n    };\n\n    setContacts(prev => [...prev, newContact]);\n  };\n\n  const handleFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const handleDeleteContact = id => {\n    setContacts(prev => prev.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    const contacts = storage.get('contacts');\n\n    if (contacts.length > 0) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    storage.set('contacts', contacts);\n  }, [contacts]);\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onAddContact={handleAddContact} />\n\n      <h2 className={s.title}>Contacts</h2>\n      <Filter filter={filter} onFilter={handleFilter} />\n      <ContactList\n        filter={filter}\n        contacts={contacts}\n        onDeleteContact={handleDeleteContact}\n      />\n    </div>\n  );\n};\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n//\n//   normalize = name => {\n//     const words = name.split(' ');\n//     return words\n//       .map(word => {\n//         const capLetter = word.charAt(0).toUpperCase();\n//         const rest = word.substring(1);\n//         return `${capLetter}${rest}`;\n//       })\n//       .join(' ');\n//   };\n//\n//   handleAddContact = (name, number) => {\n//     const normName = this.normalize(name);\n//     const isDuplicate = this.state.contacts.some(\n//       item => item.name === normName,\n//     );\n//\n//     if (isDuplicate) {\n//       alert(`${normName} is already in contacts.`);\n//       return;\n//     }\n//\n//     const newContact = {\n//       name: normName,\n//       number,\n//       id: nanoid(),\n//     };\n//\n//     this.setState(prevState => ({\n//       contacts: [...prevState.contacts, newContact],\n//     }));\n//   };\n//\n//   handleFilter = e => {\n//     this.setState({\n//       filter: e.target.value,\n//     });\n//   };\n//\n//   handleDeleteContact = id => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(item => item.id !== id),\n//     }));\n//   };\n//\n//   componentDidMount() {\n//     const contacts = storage.get('contacts');\n//\n//     if (contacts) {\n//       this.setState({ contacts });\n//     }\n//   }\n//\n//   componentDidUpdate(prevProps, prevState, snapshot) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       storage.set('contacts', this.state.contacts);\n//     }\n//   }\n//\n//   render() {\n//     return (\n//       <div className={s.app}>\n//         <h1 className={s.title}>Phonebook</h1>\n//         <ContactForm onAddContact={this.handleAddContact} />\n//\n//         <h2 className={s.title}>Contacts</h2>\n//         <Filter filter={this.state.filter} onFilter={this.handleFilter} />\n//         <ContactList\n//           filter={this.state.filter}\n//           contacts={this.state.contacts}\n//           onDeleteContact={this.handleDeleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","const set = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst del = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, set, del };\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}