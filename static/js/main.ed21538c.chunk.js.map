{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","services/local-storage.js","index.js","components/ContactForm/ContactForm.module.css","components/App/App.module.css"],"names":["module","exports","ContactList","filter","contacts","onDeleteContact","className","s","list","name","toLowerCase","includes","map","id","number","item","entry","type","onClick","ContactForm","state","handleInputContact","e","setState","target","value","handleAddContact","preventDefault","props","onAddContact","form","onSubmit","this","field","onChange","pattern","title","required","button","Component","Filter","onFilter","App","normalize","split","word","capLetter","charAt","toUpperCase","rest","substring","join","normName","some","alert","newContact","nanoid","prevState","handleFilter","handleDeleteContact","key","JSON","parse","localStorage","getItem","error","storage","prevProps","snapshot","setItem","stringify","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed21538c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"entry\":\"ContactList_entry__12DSb\",\"number\":\"ContactList_number__14V4G\"};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filter, contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.entry}>\n              <span>{name}</span>\n              <span className={s.number}>{number}</span>\n            </p>\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputContact = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleAddContact = e => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleAddContact}>\n        <label className={s.field}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputContact}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.field}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputContact}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = { onAddContact: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ onFilter, filter }) => {\n  return (\n    <div className={s.filter}>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} value={filter} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport s from './App.module.css';\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport * as storage from 'services/local-storage';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  normalize = name => {\n    const words = name.split(' ');\n    return words\n      .map(word => {\n        const capLetter = word.charAt(0).toUpperCase();\n        const rest = word.substring(1);\n        return `${capLetter}${rest}`;\n      })\n      .join(' ');\n  };\n\n  handleAddContact = (name, number) => {\n    const normName = this.normalize(name);\n    const isDuplicate = this.state.contacts.some(\n      item => item.name === normName,\n    );\n\n    if (isDuplicate) {\n      alert(`${normName} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: normName,\n      number,\n      id: nanoid(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  handleFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = storage.get('contacts');\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.contacts !== prevState.contacts) {\n      storage.set('contacts', this.state.contacts);\n    }\n  }\n\n  render() {\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={this.state.filter} onFilter={this.handleFilter} />\n        <ContactList\n          filter={this.state.filter}\n          contacts={this.state.contacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const set = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst del = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, set, del };\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"field\":\"ContactForm_field__2c9Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\",\"title\":\"App_title__1YcTA\"};"],"sourceRoot":""}